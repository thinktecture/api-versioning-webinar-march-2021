{
	"info": {
		"_postman_id": "8a267de1-8fd2-44e5-8ce9-5b084020aa05",
		"name": "Webinar API Versioning in .NET 5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Start new project",
			"item": [
				{
					"name": "Get weather forecasts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/WeatherForecast",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"WeatherForecast"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Add basic & default versioning",
			"item": [
				{
					"name": "Get weather forecasts should return 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/WeatherForecast",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"WeatherForecast"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get weather forecasts with api version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/WeatherForecast?api-version=1.0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"WeatherForecast"
							],
							"query": [
								{
									"key": "api-version",
									"value": "1.0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Sample?api-version=1.0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Sample"
							],
							"query": [
								{
									"key": "api-version",
									"value": "1.0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Version 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"2\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Sample?api-version=2.0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Sample"
							],
							"query": [
								{
									"key": "api-version",
									"value": "2.0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET SameController Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Example/Version?api-version=1.0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Example",
								"Version"
							],
							"query": [
								{
									"key": "api-version",
									"value": "1.0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SameController Version 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"2\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Example/Version?api-version=2.0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Example",
								"Version"
							],
							"query": [
								{
									"key": "api-version",
									"value": "2.0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Configure API Versioning",
			"item": [
				{
					"name": "Get Version and check versions header",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1\");",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0, 2.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Sample?api-version=1.0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Sample"
							],
							"query": [
								{
									"key": "api-version",
									"value": "1.0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Version 1 by MediaType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1\");",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0, 2.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain;v=1.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Sample",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Sample"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Version 2 by MediaType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"2\");",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0, 2.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "text/plain;v=2.0"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Sample",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Sample"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Version 1 by Url Segment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1\");",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0, 2.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1.0/Sample",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1.0",
								"Sample"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Version 2 by Url Segment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"2\");",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0, 2.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v2.0/Sample",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v2.0",
								"Sample"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get deprecated weather forecasts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"api-deprecated-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-deprecated-versions\", \"1.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v1.0/WeatherForecast",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1.0",
								"WeatherForecast"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Advanced Customization",
			"item": [
				{
					"name": "Get weather forecasts as default endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/WeatherForecast",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"WeatherForecast"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get unversioned weather forecasts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"api-supported-versions header is not present\", function () {",
									"    pm.response.to.not.have.header(\"api-supported-versions\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/WeatherForecast",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"WeatherForecast"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Version by custom query string",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1\");",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0, 2.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Sample?v=1.0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Sample"
							],
							"query": [
								{
									"key": "v",
									"value": "1.0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Version by custom media type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1\");",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0, 2.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain;version=1.0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Sample",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Sample"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Version by custom header",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1\");",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0, 2.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-version",
								"type": "text",
								"value": "1.0"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Sample",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Sample"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test dynamic version selection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1.0\");",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0, 2.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Example/Test?v=1.0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Example",
								"Test"
							],
							"query": [
								{
									"key": "v",
									"value": "1.0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Test dynamic version selection with v2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"2.0\");",
									"});",
									"",
									"pm.test(\"api-supported-versions header is present\", function () {",
									"    pm.response.to.be.header(\"api-supported-versions\", \"1.0, 2.0\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/Example/Test?v=2.0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"Example",
								"Test"
							],
							"query": [
								{
									"key": "v",
									"value": "2.0"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "protocol",
			"value": "https",
			"type": "string"
		},
		{
			"key": "host",
			"value": "localhost",
			"type": "string"
		},
		{
			"key": "port",
			"value": "5001",
			"type": "string"
		}
	]
}